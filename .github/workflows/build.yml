name: Building cpython-android
on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "x86-64"
            arch: "x86-64"
            os: ubuntu-22.04
          - name: "x86"
            arch: "x86"
            os: ubuntu-22.04
          - name: "armeabi-v7a"
            arch: "armv7a-eabi"
            os: ubuntu-22.04
          - name: "arm64-v8a"
            arch: "aarch64"
            os: ubuntu-22.04
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash {0}

    steps:
      - name: setup and dependencies
        run: |
          sudo apt update
          #sudo apt -y upgrade
          sudo apt -y install build-essential 

          # we actually need bash
          sudo ln -sf /bin/bash /bin/sh

      - name: fix crlf
        run: git config --global core.autocrlf input

      - name: checkout
        uses: actions/checkout@v3

      - name: submodules
        run: |
          git submodule update --init --depth 1
          #this has to be changed with every submodule update
          git -C cpython fetch --deepen 35

      - name: Python Version
        id: python-version
        run: |
          set -e
          # for maximum compatibility we use our python
          echo "pyver=$(git -C cpython describe --tags)" >> $GITHUB_OUTPUT
        shell: bash

      - name: restore ${{ runner.os }} host python
        id: cache-host-python-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            build-${{ matrix.name }}/host-python
          key: ${{ runner.os }}-python-${{ steps.python-version.outputs.pyver }}

      - name: build
        run: |
          mkdir -p build-${{ matrix.name }}
          cd build-${{ matrix.name }}
          ARCH=${{ matrix.arch }} CHOST=x86_64-pc-linux-gnu ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/27.3.13750724 ../build.sh

      - name: ${{ matrix.name }} zip
        run: |
          cd build-${{ matrix.name }}/output/opt/android-libs
          zip -r cpython_${{ matrix.name }}.zip ${{ matrix.arch }}

      - name: cpython ${{ matrix.name }}
        uses: actions/upload-artifact@v4
        with:
          name: cpython_${{ matrix.name }}
          path: build-${{ matrix.name }}/output/opt/android-libs/cpython_${{ matrix.name }}.zip

      - name: ls
        run: |
          ls *

      - name: save host python
        if: ${{ matrix.name }} == "x86-64" #we're using all linux atm. not sure if there is problem in each matrix having it's own host python...
        uses: actions/cache/save@v4
        with:
          path: |
            build-${{ matrix.name }}/host-python
          key: ${{ steps.cache-host-python-restore.outputs.cache-primary-key }}

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: rel
      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            rel/**
